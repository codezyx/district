//apply plugin:'application'

jar {
    exclude "**/*.xml","**/*.properties","**/*.json","**/*.sql"
}

startScripts{
    classpath += files('conf')
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile    = file getUnixScript()
        def winHeadTag = 'CLASSPATH=%APP_HOME%'
        def winTailTag = '%APP_HOME%\\lib\\conf\r\n'
        def winText = windowsScriptFile.text
        def winCp = winText.substring(winText.indexOf(winHeadTag),winText.indexOf(winTailTag)+winTailTag.length())
        windowsScriptFile.text = winText.replace(winCp, 'CLASSPATH=%APP_HOME%\\lib\\*;%APP_HOME%\\conf')
//        windowsScriptFile.text = winText.text.replace('%APP_HOME%\\lib\\conf', '%APP_HOME%\\conf')
        def uxHeadTag = 'CLASSPATH=$APP_HOME'
        def uxTailTag = '$APP_HOME/lib/conf\n'
        def uxText = unixScriptFile.text
        def uxCp = uxText.substring(uxText.indexOf(uxHeadTag),uxText.indexOf(uxTailTag)+uxTailTag.length())
        unixScriptFile.text = uxText.replace(uxCp, 'CLASSPATH=$APP_HOME/lib/*:$APP_HOME/conf')
//        unixScriptFile.text    = unixScriptFile.text.replace('$APP_HOME/lib/conf', '$APP_HOME/conf')
        if(unixScriptFile.text.indexOf("export APP_HOME")==-1){
            unixScriptFile.text    = unixScriptFile.text.replace('APP_HOME=',  'export APP_HOME=')
        }
    }
}

applicationDistribution.from(sourceSets.main.resources) {
    into "conf"
}

applicationDefaultJvmArgs = [

//    "-conf conf/app.json"
    //common
//        "-server",
//        "-Xms128m",
//        "-Xmx512m",
//        "-Xss256k",
//        "-Xmn192mk",//3/8heap
//        "-XX:NewRatio=8",//3/8heap
//        "-XX:SurvivorRatio=6",//1:1:X=xmn
//        "-XX:PermSize=32m",
//        "-XX:MaxPermSize=32m",

    //gc
//        "-XX:+UseG1GC",

//        "-XX:+UseConcMarkSweepGC",
//        "-XX:+UseParNewGC",
//        "-XX:+CMSParallelRemarkEnabled",
//        "-XX:+CMSPermGenSweepingEnabled",
//        "-XX:+CMSClassUnloadingEnabled",
//        "-XX:CMSInitiatingOccupancyFraction=68",//concurrent mode failure set it small
//        "-XX:+UseCMSInitiatingOccupancyOnly",
//        "-XX:MaxDirectMemorySize=64m",
//        "-XX:-UseGCOverheadLimit",

//        "-XX:MaxTenuringThreshold=14",//<15

    //memory debug
//        "-XX:-HeapDumpOnOutOfMemoryError",
//        "-XX:HeapDumpPath=./java_pid<pid>.hprof",
//        "-XX:OnOutOfMemoryError=\"<cmd args>;<cmd args>\"",
//        "-XX:OnError=\"<cmd args>;<cmd args>\"",

    //gc debug
//        "-XX:+PrintGCDetails",
//        "-XX:+PrintGCTimeStamps",
//        "-XX:+PrintGCDateStamps",
//        "-XX:+PrintTenuringDistribution",
//        "-XX:+PrintGCApplicationStoppedTime",
//        "-XX:+PrintHeapAtGC",

    //gc log
//        "-Xloggc:./gcs/gc.log",
//        "-XX:-UseGCLogFileRotation",
//        "-XX:NumberOfGClogFiles=10",
//        "-XX:GCLogFileSize=8K",//must >= 8k

    //security
//        "-Djava.security.policy=conf/policy.all",

    //monitor
//        "-Dcom.sun.management.jmxremote",
//        "-Dcom.sun.management.jmxremote.port=1099",
//        "-Dcom.sun.management.jmxremote.authenticate=false",
//        "-Dcom.sun.management.jmxremote.ssl=false",

]
